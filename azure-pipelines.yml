# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: echo hello from Linux
  - script: sudo apt-get purge cmake
  - script: mkdir ~/temp
  - script: cd ~/temp
  - script: wget https://cmake.org/files/v3.10/cmake-3.10.0-rc4.tar.gz
  - script: tar xzvf cmake-3.10.0-rc4.tar.gz > cmake-extractlog
  - script: pwd
  - script: pwd
  - script: ls
  - script: cd cmake-3.10.0-rc4 && ./bootstrap
  - script: cd cmake-3.10.0-rc4 && ls && make -j4
  - script: cd cmake-3.10.0-rc4 && ls && sudo make install
  - script: which cmake
  - script: cmake --version
  - script: wget https://www.sfml-dev.org/files/SFML-2.5.1-sources.zip
  - script: unzip SFML-2.5.1-sources.zip
  - script: cd SFML-2.5.1 && mkdir build/
  - script: cd SFML-2.5.1/build && /usr/local/bin/cmake -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=TRUE ..
  - script: cd SFML-2.5.1/build && make && sudo make install
- job: macOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - script: echo hello from macOS
- job: Windows
  variables:
    MSVC_DEFAULT_OPTIONS: ON
    SFML_DIR: D:\a\1\s\Libraries\SFML-2.5.1
    Qt5_DIR: C:\Qt\5.11.1\msvc2017_64\lib\cmake\Qt5
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: echo hello from Windows
  - script: wmic logicaldisk get name
  - script: cd
  - script: mkdir Libraries
  - script: tree
  - task: DownloadFile@1
    inputs:
      FileUrl: 'https://www.sfml-dev.org/files/SFML-2.5.1-windows-vc15-64-bit.zip'
      DestinationFolder: '$(System.DefaultWorkingDirectory)'
      requireAuthentication: false
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: 'SFML-2.5.1-windows-vc15-64-bit.zip'
      destinationFolder: 'Libraries'
      cleanDestinationFolder: true
  - script: cmake -G "Visual Studio 16 2019" -A x64 -DSFML_DIR=%SFML_DIR% -DQt5_DIR=%Qt5_DIR% .
  - script: dir
  - task: VSBuild@1
    inputs:
      solution: '**\*.sln'
